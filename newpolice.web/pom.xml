<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- The Basics -->
    <parent>
	    <groupId>com.siplan</groupId>
	    <artifactId>newpolice</artifactId>
	    <version>1.0-SNAPSHOT</version>
    </parent>
    
    <artifactId>newpolice.web</artifactId>
    <packaging>war</packaging>
    <name>newpolice.web</name>

    <dependencies>
        <!--model-->
        <dependency>
            <groupId>com.siplan</groupId>
            <artifactId>newpolice.model</artifactId>
            <version>${parent.version}</version>
        </dependency>
        <!-- dal -->
        <dependency>
            <groupId>com.siplan</groupId>
            <artifactId>newpolice.dal</artifactId>
            <version>${parent.version}</version>
        </dependency>
        <!-- biz -->
        <dependency>
            <groupId>com.siplan</groupId>
            <artifactId>newpolice.biz</artifactId>
            <version>${parent.version}</version>
        </dependency>
        <!--spring-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springmodules</groupId>
            <artifactId>spring-modules-validation</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-openid</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>

        <!-- Google App Engine meta-package -->
        <dependency>
            <groupId>net.kindleit</groupId>
            <artifactId>gae-runtime</artifactId>
            <version>${gae.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-core</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
        </dependency>

        <!-- J2EE Servlet API. We need it to compile IndexServlet class. You can
              probably remove it, if you don't explicitly use Servlets -->
        <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-servlet_2.5_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Make use of JSP tags. Remove, if you don't use JSPs -->
        <dependency>
            <artifactId>standard</artifactId>
            <groupId>taglibs</groupId>
            <type>jar</type>
            <scope>runtime</scope>
        </dependency>

        <!-- These dependencies are here just for enabling logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <!-- Test scope -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- GAE libraries for local testing as described here: http://code.google.com/appengine/docs/java/howto/unittesting.html -->
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-labs</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-stubs</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-testing</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax.jdo</groupId>
            <artifactId>jdo2-api</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>javax.transaction</groupId>
                    <artifactId>transaction-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
        </dependency>

        <dependency>
            <groupId>displaytag</groupId>
            <artifactId>displaytag</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jcl104-over-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Jackson JSON Processor -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>
    </dependencies>

    <build>

        <finalName>newpolice</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>src/main/webapp</directory>
                            <filtering>true</filtering>
                            <includes>
                                <!--<include>**/appengine-web.xml</include>-->
                                <include>**/*.xml</include>
                            </includes>
                        </resource>
                        <resource>
                            <directory>src/main/resources</directory>
                            <filtering>true</filtering>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					 <source>${jdk.version}</source>
                     <target>${jdk.version}</target>
					 <encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

            <!-- The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn
                   gae:deploy" to upload to GAE. -->
            <plugin>
                <groupId>net.kindleit</groupId>
                <artifactId>maven-gae-plugin</artifactId>
                <version>${maven-gae-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>net.kindleit</groupId>
                        <artifactId>gae-runtime</artifactId>
                        <version>${gae.version}</version>
                        <type>pom</type>
                    </dependency>
                </dependencies>
                <configuration>
                    <serverId>appengine.google.com</serverId>
                    <appDir>${maven-gae-plugin.appDir}</appDir>
                    <sdkDir>${maven-gae-plugin.sdkDir}</sdkDir>
                    <port>${maven-gae-plugin.port}</port>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>${maven-jetty-plugin.version}</version>
                <configuration>
                    <contextPath>/</contextPath>
                    <scanIntervalSeconds>3</scanIntervalSeconds>
                    <scanTargetPatterns>
                        <scanTargetPattern>
                            <directory>src/main/webapp/WEB-INF</directory>
                        </scanTargetPattern>
                    </scanTargetPatterns>
                </configuration>
            </plugin>

            <!-- Upload application to the appspot automatically, during release:perform -->
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <goals>gae:deploy</goals>
                </configuration>
            </plugin>

            <!-- Java compiler version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

        </plugins>
    </build>
    <profiles>
        <!-- We can configure our integration server to activate this profile and
              perform gae:deploy, thus uploading latest snapshot to the http://1.latest.<applicationName>.appspot.com
              automatically -->
        <profile>
            <id>integration-build</id>
            <properties>
                <gae.application.version>stage</gae.application.version>
            </properties>
        </profile>

        <!-- This profile will activate automatically during release and upload
              application to the http://2.latest.<applicationName>.appspot.com (We might
              want to set the 2nd version as our applications Default version to be accessible
              at http://<applicationName>.appspot.com) -->
        <profile>
            <id>release-build</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>

            <properties>
                <!-- During release, set application version in appengine-web.xml to
                        2 -->
                <gae.application.version>release</gae.application.version>
            </properties>
        </profile>
    </profiles>

</project>